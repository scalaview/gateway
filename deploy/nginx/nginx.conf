worker_processes 2;
pid /var/run/api-gateway.pid;

events {
    use epoll;
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr\t$http_x_forwarded_for\t$time_iso8601\t$scheme://$http_host\t$request\t$request_length\t'
    '$http_referer\t$http_user_agent\t$connection_requests\t$upstream_cache_status\t$status\t'
    '$request_time\t$upstream_response_time\t$bytes_sent\t$body_bytes_sent\t$server_name\t'
    '$upstream_addr\t$upstream_status\t$request_id\t';
    log_format api '$remote_addr\t$http_x_forwarded_for\t$time_iso8601\t$scheme://$http_host\t$request\t$request_length\t'
    '$http_referer\t$http_user_agent\t$connection_requests\t$upstream_cache_status\t$status\t'
    '$request_time\t$upstream_response_time\t$bytes_sent\t$body_bytes_sent\t$server_name\t$project\t$route_path\t$hostname\t'
    '$upstream_addr\t$upstream_status\t$upstream_request\t$request_id\t$app_version\t$api_version\t$network\t$device\t$platform\t';
    access_log /usr/local/openresty/nginx/logs/access.log main;
    error_log /usr/local/openresty/nginx/logs/error.log;
    sendfile on;
    keepalive_timeout 65s;
    fastcgi_connect_timeout 25s;
    fastcgi_send_timeout 25s;
    fastcgi_read_timeout 25s;
    fastcgi_buffer_size 256k;
    fastcgi_buffers 4 512k;
    fastcgi_busy_buffers_size 1024k;
    fastcgi_temp_file_write_size 1024k;
    client_max_body_size 8M;
    client_body_buffer_size 1M;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 8 16k;
    gzip_http_version 1.1;
    gzip_comp_level 3;
    gzip_types text/plain application/x-javascript application/javascript text/css application/xml;
    gzip_vary on;
    lua_shared_dict sgin-auth 2m;
    lua_shared_dict limit_req_store 100m;
    lua_shared_dict limit_conn_store 100m;
    lua_shared_dict routes 20m;
    lua_shared_dict projects 1m;
    lua_shared_dict jwt-auth 2m;
    lua_package_path "/var/www/html/?.lua;;";
    upstream api.com {
        server 127.0.0.1:80;
        balancer_by_lua_block {
            application.balancer()
        }
        keepalive 1000;
    }
    proxy_cache_path /tmp/cache/nginx levels=1:2 keys_zone=api_cache:20m inactive=10h max_size=500m;
    init_by_lua_block {
        application = require "app"
        application.init()
    }
    init_worker_by_lua_block {
        application.init_worker()
    }

    # server {
    #     listen       80;
    #     server_name  localhost;

    #     location / {
    #         root   html;
    #         index  index.html index.htm;
    #         return 500;
    #     }

    #     # redirect server error pages to the static page /50x.html
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }
    # }

    include /etc/nginx/resolvers.conf;
    include /etc/nginx/conf.d/*.conf;
}
